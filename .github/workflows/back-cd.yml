name: CD with Gradle

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
env:
  S3_BUCKET_NAME: pre-project-bucket-seb40-017
jobs:
    backend:
      name: CD with Gradle
      runs-on: ubuntu-18.04
      defaults:
        run:
          shell: bash
          working-directory: server

      steps:
        - name: 체크아웃
        - uses: actions/checkout@v3

        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'

        - name: gradlew 권한부여
          run: chmod +x ./gradlew

        - name: Build with Gradle
          uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
          with:
            arguments: build

        # build한 후 프로젝트를 압축합니다.
        - name: Make zip file
          run: zip -r ./build-be.zip .
          shell: bash

        # Access Key와 Secret Access Key를 통해 권한을 확인합니다.
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-northeast-2

        # 압축한 프로젝트를 S3로 전송합니다.
        - name: Upload to S3
          run: aws s3 cp --region ap-northeast-2 ./build-be.zip s3://$S3_BUCKET_NAME/build-be.zip

          # CodeDeploy에게 배포 명령을 내립니다.
        - name: Code Deploy
          run: >
            aws deploy create-deployment --application-name fitchallenge
            --deployment-config-name CodeDeployDefault.AllAtOnce
            --deployment-group-name fitchallenge-group
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=build-be.zip